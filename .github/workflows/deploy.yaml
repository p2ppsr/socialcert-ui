name: Deploy
on:
  push:
    branches: [ master, production ]

env:
  # ---------- constants ----------------------------------------------------
  GCR_HOST:         us.gcr.io
  GOOGLE_PROJECT_ID: babbage-private
  GCR_IMAGE_NAME:   socialcert-ui
  CURRENT_BRANCH:   ${{ github.ref_name }}

permissions:          # required for Workload‑Identity Federation
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # ── 1. Source + build ---------------------------------------------------
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with: { node-version: 22 }

    - name: Install deps & build
      run: |
        npm ci
        CI=true npm run build       # static React bundle

    # ── 2. Authenticate & let Docker use the creds -------------------------
    - name: Google Cloud auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_DEPLOY_CREDS }}

    - name: Configure Docker for GCR
      run: gcloud --quiet auth configure-docker ${{ env.GCR_HOST }}

    # ── 3. Build + push image ---------------------------------------------
    - name: Build & push Docker image
      id: build
      env:
        IMAGE_BASENAME: ${{ env.GCR_HOST }}/${{ env.GOOGLE_PROJECT_ID }}/${{ env.GCR_IMAGE_NAME }}
      run: |
        set -e
        for TAG in latest ${{ env.CURRENT_BRANCH }}-${{ github.sha }}; do
          IMAGE_URI=${IMAGE_BASENAME}:$TAG
          echo "▶ Building $IMAGE_URI"
          docker build -t "$IMAGE_URI" .
          docker push  "$IMAGE_URI"
        done
        echo "IMAGE_URI=${IMAGE_BASENAME}:${{ env.CURRENT_BRANCH }}-${{ github.sha }}" >> "$GITHUB_OUTPUT"

    # ── 4. Deploy to Cloud Run --------------------------------------------
    - name: Deploy
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: ${{ env.GCR_IMAGE_NAME }}-${{ env.CURRENT_BRANCH }}
        image:   ${{ steps.build.outputs.IMAGE_URI }}
        region:  us-west1
        timeout: 3540
